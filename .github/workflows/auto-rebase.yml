name: Auto Rebase Labeled PRs on Master Update

on:
  push:
    branches:
      - master

jobs:
  auto-rebase-ready-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh 
  
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: List PRs with "Ready for Release" label
        id: list_prs
        run: |
          gh pr list --state open --label "Ready for Release" --json number,headRefName \
            --jq '.[] | "\(.number) \(.headRefName)"' > prs.txt
          cat prs.txt

      - name: Exit if no PRs found
        run: |
          if [ ! -s prs.txt ]; then
            echo "No PRs with label 'Ready for Release'. Exiting."
            exit 0
          fi

      - name: Rebase each PR on master
        run: |
          while read -r pr_num pr_branch; do
            echo "Processing PR #$pr_num with branch $pr_branch"

            # Clone the repo using GitHub CLI
            gh repo clone ${{ github.repository }} repo
            cd repo

            # Set up Git
            git config user.name "Rebase Bot"
            git config user.email "jedrek.domanski@gmail.com"

            # Checkout the PR branch
            git checkout "$pr_branch"

            # Add upstream remote and fetch latest master
            git remote add upstream https://github.com/${{ github.repository }}.git
            git fetch upstream master

            # Rebase
            set +e
            git rebase upstream/master
            status=$?
            set -e

            if [ "$status" -ne 0 ]; then
              echo "❌ Rebase failed for PR #$pr_num. Commenting."
              gh pr comment "$pr_num" --body "❌ Auto-rebase failed due to conflicts. Please rebase manually."
              cd ..
              rm -rf repo
              continue
            fi

            # Push changes back
            git push --force-with-lease

            cd ..
            rm -rf repo
          done < prs.txt

