name: Auto Rebase PRs with 'Ready for Release' Label on Master Update

on:
  push:
    branches:
      - master

jobs:
  rebase-ready-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh


      - name: Fetch open PRs with label 'Ready for Release' targeting master
        id: get-prs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          prs=$(gh pr list --repo "$REPO" --state open --base master --label "Ready for Release" --json number,headRefName --jq '.[] | "\(.number) \(.headRefName)"')
          echo "$prs" > prs.txt
          echo "::set-output name=prs::$prs"

      - name: Rebase each PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          while read -r pr_num pr_branch; do
            echo "Processing PR #$pr_num with branch $pr_branch"

            # Clone repo fresh
            rm -rf repo
            git clone https://github.com/$REPO.git repo
            cd repo

            # Set git user for commits
            git config user.name "Rebase Bot"
            git config user.email "jedrek.domanski@gmail.com"

            # Fetch master and PR branch
            git fetch origin master
            git fetch origin $pr_branch

            # Checkout PR branch
            git checkout -B $pr_branch origin/$pr_branch

            # Rebase onto master
            if git rebase origin/master; then
              # Push back rebased branch
              git push --force-with-lease origin $pr_branch
              echo "Successfully rebased and pushed PR #$pr_num"
            else
              echo "Rebase failed for PR #$pr_num, commenting on PR"
              gh pr comment $pr_num --body "‚ùå Auto-rebase failed due to conflicts. Please rebase manually."
              git rebase --abort
            fi
            cd ..
          done < prs.txt
